@*
    Any external (non-LAN) accesses which display the top bar (i.e. not the Guide) should be rejected
*@
@if (!IpAddress.IsLanIP(Context))
{
	Context.Response.Redirect("/Home/GoAway");
}
@{
	var screenDisplayClass = Screen.IsOn ? "screenOnIndication" : "";
}
<script type="text/javascript">var JrmcUrl = '@JRMC.Url'; var JrmcHost = '@JRMC.Host';</script>

<div id='TopBar'>

  <table class="topBar @(Running.RunningProgramTopBarClass)">
	  <tr>
		<td class="centeredButton"><span id="toggleSettings">@Html.Raw(Button.SmallRound("[[Settings]]"))</span></td>
		<td class="width20">
			<div class="@screenDisplayClass">
				<table align='center'>
				<tr>
					<td class='pageTitle' align='center'>
					  <div id=homeTitle>@(!string.IsNullOrEmpty(Running.RunningProgram) ? Running.RunningProgram : Security.CurrentSecurityProfileShortName)</div>
					</td>
				</tr>
				<tr>
					<td class='pageTitle' align='center'>
					  <div id=volumeDisplay>@Receiver.VolumeDisplay</div>
					</td>
				</tr>
				</table>
			</div>
		  </td>
		  <td class="centeredButton"><span id="volumeDown">@Html.Raw(Button.SmallRound("[[volume_down]]"))</span></td>
		  <td class="centeredButton"><span id="volumeUp">@Html.Raw(Button.SmallRound("[[volume_up]]"))</span></td>
		  <td class="centeredButton"><span id="volumeMute">@Html.Raw(Button.SmallRound("[[volume_off]]"))</span></td>
          <td class="centeredButton"><span id="selectTV">@Html.Raw(Button.Rect("TV"))</span></td>
          <td class="centeredButton"><span id="selectMusic">@Html.Raw(Button.Rect("Music"))</span></td>
		  <td class="centeredButton"><span id="selectSpotify">@Html.Raw(Button.Rect("Spotify"))</span></td>
		  <td class="centeredButton"><span id="selectVideo">@Html.Raw(Button.Rect("Video"))</span></td>
          <td class="centeredButton"><span id="selectRoku">@Html.Raw(Button.Rect("Roku"))</span></td>
		  <td class="centeredButton"><span id="selectEpg">@Html.Raw(Button.Rect("Guide"))</span></td>
		@if (ViewData.ContainsKey("IsHome"))
		{
		  <td class="centeredButton"><span id="allOffWide">@Html.Raw(Button.SmallRound("[[Bolt]]", "buttonRed"))</span></td>
		}
        else if (ViewData.ContainsKey("LinkBack"))
		{
		  <td class="centeredButton"><span id="goBack">@Html.Raw(Button.SmallRound("[[Undo]]"))</span></td>
		}
		else
		{
		  <td class="centeredButton"><span id="goHomeWide">@Html.Raw(Button.SmallRound("[[Home]]", "buttonGreen"))</span></td>
		}
	  </tr>
  </table>
</div>
<div id="isWide" style="display:none">Yes</div>
<div id="topBarTitle" style="display:none">@ViewBag.Title</div>

@{
    ViewBag.Wide = "Wide";
}
@await Html.PartialAsync("ActionMenu")

